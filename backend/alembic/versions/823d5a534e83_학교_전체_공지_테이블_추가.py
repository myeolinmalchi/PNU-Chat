"""학교 전체 공지 테이블 추가

Revision ID: 823d5a534e83
Revises: e569f308f138
Create Date: 2025-03-10 03:21:13.059395

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import pgvector

# revision identifiers, used by Alembic.
revision: str = '823d5a534e83'
down_revision: Union[str, None] = 'e569f308f138'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'pnu_notices', sa.Column('url', sa.String(), nullable=False), sa.Column('category', sa.String(), nullable=True),
        sa.Column('title', sa.String(), nullable=False), sa.Column('content', sa.String(), nullable=False),
        sa.Column('date', sa.Date(), nullable=False), sa.Column('author', sa.String(), nullable=True),
        sa.Column('title_vector', pgvector.sqlalchemy.vector.VECTOR(dim=1024), nullable=True),
        sa.Column('title_sparse_vector', pgvector.sqlalchemy.sparsevec.SPARSEVEC(dim=250002), nullable=True),
        sa.Column('semester_id', sa.Integer(), nullable=True),
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ['semester_id'],
            ['semesters.id'],
        ), sa.PrimaryKeyConstraint('id'), sa.UniqueConstraint('url')
    )
    op.create_table(
        'pnu_notice_attachments', sa.Column('pnu_notice_id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(), nullable=False), sa.Column('url', sa.String(), nullable=False),
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(['pnu_notice_id'], ['pnu_notices.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(
        op.f('ix_pnu_notice_attachments_pnu_notice_id'), 'pnu_notice_attachments', ['pnu_notice_id'], unique=False
    )
    op.create_table(
        'pnu_notice_content_chunks', sa.Column('pnu_notice_id', sa.Integer(), nullable=False),
        sa.Column('attachment_id', sa.Integer(),
                  nullable=True), sa.Column('chunk_content', sa.String(), nullable=False),
        sa.Column('chunk_vector', pgvector.sqlalchemy.vector.VECTOR(dim=1024), nullable=True),
        sa.Column('chunk_sparse_vector', pgvector.sqlalchemy.sparsevec.SPARSEVEC(dim=250002), nullable=True),
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(['attachment_id'], ['pnu_notice_attachments.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['pnu_notice_id'], ['pnu_notices.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(
        op.f('ix_pnu_notice_content_chunks_attachment_id'),
        'pnu_notice_content_chunks', ['attachment_id'],
        unique=False
    )
    op.create_index(
        op.f('ix_pnu_notice_content_chunks_pnu_notice_id'),
        'pnu_notice_content_chunks', ['pnu_notice_id'],
        unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_pnu_notice_content_chunks_pnu_notice_id'), table_name='pnu_notice_content_chunks')
    op.drop_index(op.f('ix_pnu_notice_content_chunks_attachment_id'), table_name='pnu_notice_content_chunks')
    op.drop_table('pnu_notice_content_chunks')
    op.drop_index(op.f('ix_pnu_notice_attachments_pnu_notice_id'), table_name='pnu_notice_attachments')
    op.drop_table('pnu_notice_attachments')
    op.drop_table('pnu_notices')
    # ### end Alembic commands ###
